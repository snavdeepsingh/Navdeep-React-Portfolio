{"ast":null,"code":"var _jsxFileName = \"/Users/navdeepsingh/Desktop/Desktop - Navdeep\\u2019s MacBook Pro/Navdeep-React-Portfolio/src/Pages/Projects.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport EndGameCard from '../Cards/EndGame';\nimport Grid from '@material-ui/core/Grid';\nvar styles = {\n  root: {\n    flexGrow: 1,\n    margin: '0',\n    width: '100%',\n    marginTop: \"100px\",\n    marginBottom: \"100px\"\n  },\n  gridItem: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n};\nvar ProjectItems = [{\n  id: 1,\n  img: \"../assets/images/endGame\",\n  title: \"End Game\",\n  description: \"EndGame is a directional App with the Aim at helping users find the best location that is equidistant for a group to meet.\",\n  demo: \"https://endgame2.herokuapp.com/\",\n  gitHub: \"https://github.com/snavdeepsingh/EndGame\"\n}, {\n  id: 2,\n  img: \"../assets/images/squawker\",\n  title: \"Squawker\",\n  description: \"Take a picture of any bird to find out what bird it is. The picture is then stored in a database to be used in various aspects of Ornithology \",\n  demo: \"https://pacific-tundra-22064.herokuapp.com/\",\n  gitHub: \"https://github.com/mattrmc1/squawker\"\n}, {\n  id: 3,\n  img: \"../assets/images/react-mario-game\",\n  title: \"react-Mario-Game\",\n  description: \"Memory game built with React.js. Application renders different images. Each image listens to click events. It keeps a track of user's score.\",\n  demo: \"https://secure-savannah-37337.herokuapp.com/\",\n  gitHub: \"https://github.com/snavdeepsingh/React-Mario-Game\"\n}, {\n  id: 4,\n  img: \"../assets/images/Bamazon\",\n  title: \"Bamazon\",\n  description: \"An interactive node app where mysql and node.js is used to create a user experience who can view and place an order as a customer.\",\n  demo: \"https://drive.google.com/file/d/1C4faW8WYyA9FQTsNwFVI6j8ESfIUtIsg/view\",\n  gitHub: \"https://github.com/snavdeepsingh/Bamazon\"\n}, {\n  id: 5,\n  img: \"../assets/images/nodejs\",\n  title: \"CLI App\",\n  description: \"This node.js app receives input from the command line and fetches data from the specified API.\",\n  demo: \"https://drive.google.com/file/d/1Q6hbQZUNILZAyCIUyEiIaNQIiedBXcq5/view\",\n  gitHub: \"https://github.com/snavdeepsingh/liri-node-app\"\n}];\n\nvar Projects = function Projects(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      backgroundColor: \"#fbf8e7\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: \"#777777\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Projects\"), React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, ProjectItems.map(function (item) {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      className: classes.gridItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(EndGameCard, {\n      id: item.id,\n      img: item.img,\n      title: item.title,\n      alt: item.title,\n      description: item.description,\n      demo: item.demo,\n      gitHub: item.gitHub,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  })));\n};\n\nProjects.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Projects);","map":{"version":3,"sources":["/Users/navdeepsingh/Desktop/Desktop - Navdeepâ€™s MacBook Pro/Navdeep-React-Portfolio/src/Pages/Projects.js"],"names":["React","PropTypes","withStyles","EndGameCard","Grid","styles","root","flexGrow","margin","width","marginTop","marginBottom","gridItem","display","alignItems","justifyContent","ProjectItems","id","img","title","description","demo","gitHub","Projects","props","classes","backgroundColor","color","map","item","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport EndGameCard from '../Cards/EndGame';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    margin: '0',\n    width: '100%',\n    marginTop: \"100px\",\n    marginBottom: \"100px\"\n  },\n  gridItem: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n \n}\n\nlet ProjectItems = [\n  {\n    id: 1,\n    img: \"../assets/images/endGame\",\n    title: \"End Game\",\n    description: \"EndGame is a directional App with the Aim at helping users find the best location that is equidistant for a group to meet.\",\n    demo: \"https://endgame2.herokuapp.com/\",\n    gitHub: \"https://github.com/snavdeepsingh/EndGame\"\n  },\n  {\n    id: 2,\n    img: \"../assets/images/squawker\",\n    title: \"Squawker\",\n    description: \"Take a picture of any bird to find out what bird it is. The picture is then stored in a database to be used in various aspects of Ornithology \",\n    demo: \"https://pacific-tundra-22064.herokuapp.com/\",\n    gitHub: \"https://github.com/mattrmc1/squawker\"\n  },\n  {\n    id: 3,\n    img: \"../assets/images/react-mario-game\",\n    title: \"react-Mario-Game\",\n    description: \"Memory game built with React.js. Application renders different images. Each image listens to click events. It keeps a track of user's score.\",\n    demo: \"https://secure-savannah-37337.herokuapp.com/\",\n    gitHub: \"https://github.com/snavdeepsingh/React-Mario-Game\"\n  },\n  {\n    id: 4,\n    img: \"../assets/images/Bamazon\",\n    title: \"Bamazon\",\n    description: \"An interactive node app where mysql and node.js is used to create a user experience who can view and place an order as a customer.\",\n    demo: \"https://drive.google.com/file/d/1C4faW8WYyA9FQTsNwFVI6j8ESfIUtIsg/view\",\n    gitHub: \"https://github.com/snavdeepsingh/Bamazon\"\n  },\n  {\n    id: 5,\n    img: \"../assets/images/nodejs\",\n    title: \"CLI App\",\n    description: \"This node.js app receives input from the command line and fetches data from the specified API.\",\n    demo: \"https://drive.google.com/file/d/1Q6hbQZUNILZAyCIUyEiIaNQIiedBXcq5/view\",\n    gitHub: \"https://github.com/snavdeepsingh/liri-node-app\"\n  },\n \n]\n\nconst Projects = (props) => {\n  const { classes } = props;\n  return (\n    <div className={classes.root} style={{backgroundColor: \"#fbf8e7\"}}>\n      <h1 style={{color:\"#777777\"}}>Projects</h1>\n      \n      <Grid container spacing={24} >\n       {ProjectItems.map(item =>\n          <Grid item xs={12} sm={4} className={classes.gridItem}>\n            <EndGameCard \n            id={item.id}\n            img={item.img}\n            title={item.title}\n            alt={item.title}\n            description={item.description}\n            demo={item.demo}\n            gitHub={item.gitHub} />\n          </Grid>\n      )}\n        \n      </Grid>\n    </div>\n  )\n}\n\nProjects.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Projects);\n"]},"metadata":{},"sourceType":"module"}